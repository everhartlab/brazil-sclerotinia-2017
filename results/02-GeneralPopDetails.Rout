
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Introduction ------------------------------------------------------------
> #
> # This script was originally written by A. Pannullo in the summer of 2017
> # It has been modified by Z.N. Kamvar in the fall/winter of 2017 
> # 
> # The purpose of this script is to generate the first table for the manuscript.
> # ZNK has added comments throughout the file to guide the reader through the
> # analyses.
> 
>  
> # Setup -------------------------------------------------------------------
> #
> #
> library(poppr)
Loading required package: adegenet
Loading required package: ade4

   /// adegenet 2.1.1 is loaded ////////////

   > overview: '?adegenet'
   > tutorials/doc/questions: 'adegenetWeb()' 
   > bug reports/feature requests: adegenetIssues()


This is poppr version 2.6.1. To get started, type package?poppr
OMP parallel support: available
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.2.1 â”€â”€
[32mâœ”[39m [34mggplot2[39m 2.2.1     [32mâœ”[39m [34mpurrr  [39m 0.2.4
[32mâœ”[39m [34mtibble [39m 1.4.2     [32mâœ”[39m [34mdplyr  [39m 0.7.4
[32mâœ”[39m [34mtidyr  [39m 0.8.0     [32mâœ”[39m [34mstringr[39m 1.3.0
[32mâœ”[39m [34mreadr  [39m 1.1.1     [32mâœ”[39m [34mforcats[39m 0.2.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mâœ–[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mâœ–[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
> if (!interactive()) options(width = 200)
> enc <- getOption("encoding")
> options(encoding = "iso-8859-1")
> CD <- readRDS(here::here("data", "full-genclone-object.rds"))
> 
> 
> # MCG Tabulation ----------------------------------------------------------
> 
> 
> # We can tabulate the MCGs by using them as custom multilocus genotypes.
> mll.custom(CD) <- strata(CD) %>% 
+   mutate(MCG = case_when(is.na(MCG) ~ "?", 
+                          TRUE     ~ as.character(MCG))) %>% 
+   pull(MCG)
> mlg.table(CD, color = TRUE)
                    ?  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  Y  Z
Midwest             0  3  2  0  0  0  0  0  1  1  2  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0
Argentina           0  0  0  1  1  1  1  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
GÃ³ias              11  0  0  0  0  0  0  0  0  0  0  0  0  0  7  0  0  0  0  0  0  0  0  0  0  0
ParanÃ¡              1  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  3  3  2  3  0  0  0  1  1
Bahia               6  0  0  0  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  0  1  0  0  0  0
Rio Grande do Sul   0  0  0  0  0  0  0  0  0  0  0  0  0  0  4  6  0  2  2  0  0  0  1  1  0  0
Minas Gerias        7  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
Mato Grosso do Sul  0  0  0  0  0  0  0  0  0  2  0  0  0  0  1  0  0  0  0  0  1  1  0  0  0  0
> 
> # The plot produced needs to be cleaned up a bit:
> # 
> #  1. The populations need to be arranged in the correct levels
> #  2. The colors need to be replaced with our custom colors
> #  3. We want to provide an indicator for the uncategorized MCGs
> #  4. The text size and family needs to be set. 
> #  
> p          <- last_plot()
> pal        <- other(CD)$palette
> mcg_counts <- colSums(table(strata(CD, ~MCG/Population, combine = FALSE)))
> names(pal) <- paste0(names(pal), "(", mcg_counts[names(pal)], ")")
> pdf(here::here("figs/MCG-bar.pdf"), width = 7.20472 * 0.6, height = 7.20472 * 0.4, pointsize = 5, colormodel = "cmyk")
> dev.control("enable") # allows me to copy to tiff device
> p %+%
+   mutate(p$data, Population = fct_relevel(Population, names(other(CD)$palette))) +
+   scale_fill_manual(values = other(CD)$palette, labels = names(pal)) + 
+   aes(alpha = ifelse(MLG == "?", "unknown", "known"), color = I("black")) +
+   scale_alpha_manual(values = c(unknown = 0.5, known = 1), guide = "none") +
+   guides(fill = guide_legend(nrow = 3)) +
+   theme_bw(base_size = 10, base_family = "Helvetica") +
+   theme(legend.position = "top") +
+   theme(panel.grid.major.x = element_blank()) +
+   theme(panel.grid.minor.x = element_blank()) +
+   theme(panel.grid.major.y = element_line(color = "grey20")) +
+   theme(panel.grid.minor.y = element_line(color = "grey40", linetype = 2)) +
+   theme(axis.text = element_text(color = "black")) +
+   theme(axis.ticks = element_line(color = "black")) +
+   theme(panel.border = element_rect(color = "black", size = 1)) +
+   scale_y_continuous(limits = c(0, 30), expand = c(0, 0)) +
+   labs(list(
+     alpha = "MCG status",
+     x     = "MCG",
+     title = NULL
+   ))
Scale for 'y' is already present. Adding another scale for 'y', which will replace the existing scale.
> dev.copy(device = tiff, here::here("figs/MCG-bar.tiff"), width = 7.20472 * 0.6, height = 7.20472 * 0.4, pointsize = 5, units = "in", res = 1200)
quartz_off_screen 
                4 
> dev.off()
pdf 
  2 
> dev.off()
pdf 
  3 
> dev.off()
null device 
          1 
> 
> # Checking loci and missing data ------------------------------------------
> 
> # Does the genotype accumulation curve plateau?
> genotype_curve(CD, sample = 1000, thresh = 0.9)
> 
> # Are there patterns of missing data/population?
> info_table(CD, type = "missing", percent = TRUE)
                    Locus
Population             5-2   6-2   7-2 8-3   9-2 12-2  20-3  55-4 110-4 114-4 17-3  Mean
  Midwest                . 0.133 0.067   .     .    .     . 0.067     .     .    . 0.024
  Argentina          0.400     .     .   . 0.200    .     .     .     .     .    . 0.055
  GÃ³ias                  .     . 0.056   . 0.111    . 0.111     . 0.167     .    . 0.040
  ParanÃ¡             0.067     . 0.067   .     .    . 0.067 0.133 0.067     .    . 0.036
  Bahia              0.077 0.077 0.077   .     .    . 0.077 0.077 0.154     .    . 0.049
  Rio Grande do Sul  0.125     .     .   . 0.062    .     . 0.188 0.125     .    . 0.045
  Minas Gerias           .     .     .   .     .    . 0.286     .     .     .    . 0.026
  Mato Grosso do Sul     .     .     .   . 0.400    .     . 0.200     .     .    . 0.055
  Total              0.064 0.032 0.043   . 0.064    . 0.064 0.085 0.085     .    . 0.040
> 
> # Are there any samples with fewer than 9 typed loci?
> table(nLoc(CD) * propTyped(CD))

 9 10 11 
 5 31 58 
> 
> 
> # Function to correct encoding
> correct_encoding <- function(path){
+   readLines(path) %>% 
+     iconv(from = "UTF-8", to = "ISO-8859-1") %>%
+     writeLines(con = path)
+ }
> 
> table1_path <- here::here("tables", "country-population-year-n.csv")
> table2_path <- here::here("tables", "diversity-statistics.csv")
> 
> 
> # creating table 1 --------------------------------------------------------
> 
> poptable <- strata(CD) %>% 
+   select(Continent, Country, Population, Year) %>% 
+   group_by(Continent, Country, Population) %>%
+   summarize(`Year(s) Collected` = Year %>% sort() %>% unique() %>% paste(collapse = ", ") , n = n()) %>%
+   arrange(desc(Country), -n) %>%
+   ungroup() %>% 
+   readr::write_csv(table1_path) %>%
+   print()
[38;5;246m# A tibble: 8 x 5[39m
  Continent     Country       Population         `Year(s) Collected`                          n
  [3m[38;5;246m<fct>[39m[23m         [3m[38;5;246m<fct>[39m[23m         [3m[38;5;246m<fct>[39m[23m              [3m[38;5;246m<chr>[39m[23m                                    [3m[38;5;246m<int>[39m[23m
[38;5;250m1[39m South America Brazil        GÃ³ias              2012, 2010                                  18
[38;5;250m2[39m South America Brazil        Rio Grande do Sul  2012                                        16
[38;5;250m3[39m South America Brazil        ParanÃ¡             2012, 2014                                  15
[38;5;250m4[39m South America Brazil        Bahia              2012, 2010                                  13
[38;5;250m5[39m South America Brazil        Minas Gerias       2009                                         7
[38;5;250m6[39m South America Brazil        Mato Grosso do Sul 2012                                         5
[38;5;250m7[39m South America Argentina     Argentina          1996                                         5
[38;5;250m8[39m North America United States Midwest            1977, 1990, 1994, 1996, 1999, 2012, 2009    15
> correct_encoding(table1_path)
> 
> # creating table 2 --------------------------------------------------------
> # This table is a bit more complicated because we want to show summary
> # statistics over all heirarchical levels. We can first calculate private
> # alleles over all these levels.
> 
> # Private Alleles (out of n alleles/locus) --------------------------------
> 
> (pal_pop  <- private_alleles(CD, locus ~ Population, count.alleles = FALSE))
                   5-2 6-2 7-2 8-3 9-2 12-2 20-3 55-4 110-4
Midwest              1   1   1   1   0    0    0    2     1
Argentina            0   0   0   0   0    0    1    1     0
GÃ³ias                2   0   0   0   0    0    2    0     0
ParanÃ¡               0   0   0   2   1    0    0    3     0
Bahia                0   0   1   0   0    1    2    0     0
Rio Grande do Sul    0   0   0   0   1    0    1    1     0
Minas Gerias         0   0   0   0   0    0    0    0     0
Mato Grosso do Sul   1   0   0   0   0    0    1    0     0
> (pal_ctry <- private_alleles(CD, locus ~ Country,    count.alleles = FALSE))
              5-2 6-2 7-2 8-3 9-2 12-2 20-3 55-4 110-4
United States   1   1   1   1   0    0    0    2     1
Argentina       0   0   0   0   0    0    1    1     0
Brazil          3   1   3   2   3    1    7    5     0
> (pal_ctnt <- private_alleles(CD, locus ~ Continent,  count.alleles = FALSE))
              5-2 6-2 7-2 8-3 9-2 12-2 20-3 55-4 110-4
North America   1   1   1   1   0    0    0    2     1
South America   3   2   4   4   3    2    9    6     0
> private_allele_table <- map_df(list(pal_pop, pal_ctry, pal_ctnt), 
+        ~enframe(rowSums(.x), name = "Population", value = "private"))
> 
> # Fraction of alleles in data that are private 
> print(priv_fraction <- sweep(pal_pop, 2, nAll(CD)[colnames(pal_pop)], FUN = "/"))
                     5-2  6-2       7-2       8-3       9-2 12-2       20-3       55-4 110-4
Midwest            0.125 0.25 0.1666667 0.1428571 0.0000000  0.0 0.00000000 0.18181818  0.25
Argentina          0.000 0.00 0.0000000 0.0000000 0.0000000  0.0 0.09090909 0.09090909  0.00
GÃ³ias              0.250 0.00 0.0000000 0.0000000 0.0000000  0.0 0.18181818 0.00000000  0.00
ParanÃ¡             0.000 0.00 0.0000000 0.2857143 0.1666667  0.0 0.00000000 0.27272727  0.00
Bahia              0.000 0.00 0.1666667 0.0000000 0.0000000  0.2 0.18181818 0.00000000  0.00
Rio Grande do Sul  0.000 0.00 0.0000000 0.0000000 0.1666667  0.0 0.09090909 0.09090909  0.00
Minas Gerias       0.000 0.00 0.0000000 0.0000000 0.0000000  0.0 0.00000000 0.00000000  0.00
Mato Grosso do Sul 0.125 0.00 0.0000000 0.0000000 0.0000000  0.0 0.09090909 0.00000000  0.00
> print(priv_fraction <- sweep(pal_ctry, 2, nAll(CD)[colnames(pal_ctry)], FUN = "/"))
                5-2  6-2       7-2       8-3 9-2 12-2       20-3       55-4 110-4
United States 0.125 0.25 0.1666667 0.1428571 0.0  0.0 0.00000000 0.18181818  0.25
Argentina     0.000 0.00 0.0000000 0.0000000 0.0  0.0 0.09090909 0.09090909  0.00
Brazil        0.375 0.25 0.5000000 0.2857143 0.5  0.2 0.63636364 0.45454545  0.00
> print(priv_fraction <- sweep(pal_ctnt, 2, nAll(CD)[colnames(pal_ctnt)], FUN = "/"))
                5-2  6-2       7-2       8-3 9-2 12-2      20-3      55-4 110-4
North America 0.125 0.25 0.1666667 0.1428571 0.0  0.0 0.0000000 0.1818182  0.25
South America 0.375 0.50 0.6666667 0.5714286 0.5  0.4 0.8181818 0.5454545  0.00
> 
> # To calculate allele and genotype diversity, the easiest way is to create a 
> # list containing all of our heirarchical levels and iterate over those using
> # purrr::map()
> 
> mll(CD) <- "original"
> poplist <- c(seppop(CD),
+              seppop(CD, ~Country),
+              seppop(CD, ~Continent),
+              list(Pooled = CD)
+              )
> 
> # Removing population factor from the pooled populations
> pop(poplist[["Pooled"]]) <- NULL
> 
> # Allelic Diversity -------------------------------------------------------
> # We only want the average value across loci for these stats
> 
> locus_tables <- purrr::map(poplist, locus_table, information = FALSE)
> 
> # One "easy" way to extract information is to create helper functions like this
> # that will return a single number.
> # 
> # Calcuation for effective number of allelels
> Ae <- function(loctab){
+   mean(1 / (1 - loctab[-nrow(loctab), "Hexp", drop = TRUE]))
+ }
> # Calculation for Nei's gene diversity
> Hexp <- function(loctab){
+   loctab[nrow(loctab), "Hexp", drop = TRUE]
+ }
> # Calculation for the Average number of alleles/locus
> nall <- function(loctab){
+   loctab[nrow(loctab), "allele", drop = TRUE]
+ }
> 
> # Now we can take all of the data we gathered above and combine it
> main_locus_table <- purrr::map_df(locus_tables, 
+                                   ~{tibble::data_frame(Alleles = nall(.), 
+                                                        Ae      = Ae(.), 
+                                                        Hexp    = Hexp(.)
+                                                        )
+                                     }, 
+                                   .id = "Population")
> 
> 
> # Genotypic Diversity -----------------------------------------------------
> 
> 
> # Here we are calculating the basic statistics for genotypic diversity.
> # We are counting up Shannon-Weiner Index (H), Stoddardt and Taylor's Index (G)
> # and the ratio of the two (E.5).
> genotype_table <- purrr::map_df(poplist, 
+                                 poppr, 
+                                   quiet = TRUE, lambda = FALSE, total = FALSE, 
+                                 .id = "Population") %>%
+   select(Population, N, MLG, H, G, E.5) %>%
+   mutate(H = exp(H)) %>%
+   rename(eH = H)
There were 15 warnings (use warnings() to see them)
> 
> # Combining Private Alleles, Genotypic, and Allelic Diversity -------------
> # Here we can join all the tables together and polish them.
> 
> dplyr::left_join(main_locus_table, genotype_table, by = "Population") %>%
+   dplyr::left_join(private_allele_table, by = "Population") %>%
+   dplyr::distinct() %>%
+   dplyr::mutate(Country = case_when(
+     Population == "Midwest" ~ "United States",
+     Population == "United States" ~ "United States", 
+     Population == "Argentina"     ~ "Argentina",
+     Population == "Brazil"        ~ "Brazil",
+     Population == "North America" ~ "-", # These labels don't apply to Country
+     Population == "South America" ~ "-",
+     Population == "Pooled"        ~ "-",
+     TRUE                          ~ "Brazil"
+     )) %>%
+   dplyr::mutate(Continent = case_when(
+     Country == "United States" ~ "North America",
+     Country == "-"             ~ Population,
+     TRUE                       ~ "South America"
+   )) %>%
+   dplyr::mutate(Population = case_when(
+     Population %in% Continent ~ "-", # These labels don't apply to populations
+     Population %in% Country   ~ "-",
+     TRUE                      ~ Population
+   )) %>% 
+   dplyr::mutate(Continent = gsub("o[ur]th", ".", Continent)) %>% # North -> N./South -> S.
+   dplyr::mutate(Country = gsub("United States", "U.S.", Country)) %>%
+   dplyr::select(Continent, Country, Population, N, MLG, Alleles, Ap = private, everything()) %>%
+   dplyr::arrange(Continent  == "Pooled",     
+                  Country    == "-",          
+                  Population == "-" & Country != "Argentina", 
+                  Continent  == "N. America",  
+                  Country    == "Argentina",
+                  Country, 
+                  -N) %>%
+   dplyr::filter(Continent != "N. America" | Population != "-") %>% # removing duplicates
+   dplyr::mutate_if(is.numeric, signif, 3) %>%
+   dplyr::mutate(N = glue::glue_data(., "{sprintf('%2d', N)} ({sprintf('%2d', MLG)})")) %>%
+   select(-MLG) %>%
+   readr::write_csv(table2_path) %>%
+   print()
[38;5;246m# A tibble: 11 x 11[39m
   Continent  Country   Population         N         Alleles    Ap    Ae  Hexp    eH     G   E.5
   [3m[38;5;246m<chr>[39m[23m      [3m[38;5;246m<chr>[39m[23m     [3m[38;5;246m<chr>[39m[23m              [3m[38;5;246m<chr>[39m[23m       [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m
[38;5;250m 1[39m S. America Brazil    GÃ³ias              18 (17)      2.73  4.00  1.79 [38;5;246m0[39m[38;5;246m.[39m408 16.7  16.2  [38;5;246m0[39m[38;5;246m.[39m970
[38;5;250m 2[39m S. America Brazil    Rio Grande do Sul  16 (16)      3.27  3.00  2.49 [38;5;246m0[39m[38;5;246m.[39m579 16.0  16.0  1.00 
[38;5;250m 3[39m S. America Brazil    ParanÃ¡             15 (15)      3.18  6.00  2.73 [38;5;246m0[39m[38;5;246m.[39m564 15.0  15.0  1.00 
[38;5;250m 4[39m S. America Brazil    Bahia              13 (13)      2.64  4.00  2.01 [38;5;246m0[39m[38;5;246m.[39m461 13.0  13.0  1.00 
[38;5;250m 5[39m S. America Brazil    Minas Gerias       [38;5;246m"[39m 7 ( 6)[38;5;246m"[39m    1.64  [38;5;246m0[39m     1.41 [38;5;246m0[39m[38;5;246m.[39m235  5.74  5.44 [38;5;246m0[39m[38;5;246m.[39m937
[38;5;250m 6[39m S. America Brazil    Mato Grosso do Sul [38;5;246m"[39m 5 ( 5)[38;5;246m"[39m    2.18  2.00  2.35 [38;5;246m0[39m[38;5;246m.[39m479  5.00  5.00 1.00 
[38;5;250m 7[39m S. America Argentina -                  [38;5;246m"[39m 5 ( 5)[38;5;246m"[39m    2.27  2.00  3.20 [38;5;246m0[39m[38;5;246m.[39m561  5.00  5.00 1.00 
[38;5;250m 8[39m N. America U.S.      Midwest            15 (11)      3.00  7.00  2.01 [38;5;246m0[39m[38;5;246m.[39m472  8.77  6.43 [38;5;246m0[39m[38;5;246m.[39m698
[38;5;250m 9[39m S. America Brazil    -                  74 (67)      5.18 25.0   2.16 [38;5;246m0[39m[38;5;246m.[39m512 64.0  59.5  [38;5;246m0[39m[38;5;246m.[39m929
[38;5;250m10[39m S. America -         -                  79 (72)      5.36 33.0   2.22 [38;5;246m0[39m[38;5;246m.[39m525 68.9  64.3  [38;5;246m0[39m[38;5;246m.[39m932
[38;5;250m11[39m Pooled     -         -                  94 (83)      6.00 [31mNA[39m     2.40 [38;5;246m0[39m[38;5;246m.[39m563 77.0  66.9  [38;5;246m0[39m[38;5;246m.[39m868
> 
> correct_encoding(table2_path)
>   
> options(encoding = enc)
> 
> 
> 
> 
> 
> 
> 
> 
> 
